@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "CityEdit";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-file-text mr-1"></i> Admin Console</a></li>
        <li class="breadcrumb-item active" aria-current="page">City Edit </li>
    </ol>
    <div class="ml-auto">
        <a href="~/City/CityList" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> City List
        </a>

    </div>
</div>

<div class="row">
    <div class="col-lg-12">

        <form action="#" role="form" class="card validate" id="formPost" enctype="multipart/form-data">
            <div class="card-header">
                <h3 class="card-title">City Edit</h3>
            </div>
            <div class=" card-body">
                <div class="row  mb-1">
                    <div class="col-lg-6  mb-1">
                        <label class="form-label">City Name &nbsp;<span style="color: red;"><b>*</b></span></label>
                        <input type="text" class="form-control" id="city" placeholder="City Name" required>
                    </div>
                    <div class="col-lg-6  mb-1">
                        <label class="form-label">State Name&nbsp;<span style="color: red;"><b>*</b></span></label>
                        <select class="form-control" id="state" placeholder="State" required></select>
                    </div>
                </div>
                <br />
                <br />
                <div class="row">
                    <div class="col-lg-6">
                        <button type="button" id="btnUpdate" class="btn btn-radius btn-success">Update</button>
                        <a type="button" href="/City/CityEdit" class="btn btn-radius btn-danger">Reset</a>
                    </div>
                </div>

            </div>
        </form>
    </div>
</div>


@section scripts{
    <script>
        var cityId = @ViewBag.cityId
        loadSingleCity()
        function loadSingleCity() {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/City/GetSingleCity/" + cityId,
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (data) {
                    //console.log(data);
                    if (data) {
                        $('#city').val(data.cityName);
                        GetStateList(data.cityId);
                    }
                    else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        
        function GetStateList(Id) {
            var opt = '';
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/State/GetStateList",
                contentType: "application/json; charset=utf-8",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (res) {

                    var options = [];
                    options.push('<option value="">Select State</option>');
                    for (var i = 0; i < res.length; i++) {
                        if (Id == res[i].stateId) {
                            opt = 'selected'
                        } else {
                            opt = '';
                        }
                        options.push('<option value="' + res[i].stateId + '" ' + opt + '>' + res[i].stateName + '</option>');
                    }
                    $("#state").html(options.join(''));
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

        $("#btnUpdate").click(function (e) {
            if (!document.getElementById("formPost").checkValidity()) {
                e.preventDefault();
            } else {

                var model = {
                    cityId: cityId,
                    cityName: $.trim($("#city").val()),
                    stateId: parseInt($("#state").val()),
                    updatedBy: @Context.Session.GetInt32("UserId"),
                }
                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/City/UpdateCity",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },

                    success: function (data, statusText, xhr) {
                        console.log(data)
                        if (xhr.status === 200) {
                            $('#hospital').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                icon: "success",
                                title: "City",
                                text: "Successfully updated!",
                                type: "success"
                            });
                        } else if (data.status === "duplicate") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else if (data.status === "error") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else {
                            sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                        }
                    },
                    error: function (data) {
                        console.log(data);
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                });
            }
        });
    </script>
}