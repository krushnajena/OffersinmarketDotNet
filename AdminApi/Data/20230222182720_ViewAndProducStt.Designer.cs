// <auto-generated />
using System;
using AdminApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminApi.Data
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230222182720_ViewAndProducStt")]
    partial class ViewAndProducStt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminApi.Models.App.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 447, DateTimeKind.Local).AddTicks(9449));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("AdminApi.Models.App.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BannerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 448, DateTimeKind.Local).AddTicks(1301));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("OnClickId")
                        .HasColumnType("int");

                    b.Property<string>("OnClickType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("BannerId");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("AdminApi.Models.App.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'2', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId1")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(8311));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("CategoryId1");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Restaurant",
                            CreatedBy = 1,
                            CreatedOn = new DateTime(2023, 2, 22, 23, 57, 20, 441, DateTimeKind.Local).AddTicks(2842),
                            Icon = "/images/restaurant.png",
                            IsActive = true,
                            IsDeleted = false,
                            Order = 100
                        });
                });

            modelBuilder.Entity("AdminApi.Models.App.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 447, DateTimeKind.Local).AddTicks(7695));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AdminApi.Models.App.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 448, DateTimeKind.Local).AddTicks(3073));

                    b.Property<string>("CuisineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisines");
                });

            modelBuilder.Entity("AdminApi.Models.App.Follower", b =>
                {
                    b.Property<int>("FollowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 447, DateTimeKind.Local).AddTicks(3791));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FollowerId");

                    b.HasIndex("StoreId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("AdminApi.Models.App.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 454, DateTimeKind.Local).AddTicks(1987));

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double?>("MRP")
                        .HasColumnType("float");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductView")
                        .HasColumnType("int");

                    b.Property<int>("SecondaryCategoryId")
                        .HasColumnType("int");

                    b.Property<double?>("SellingPrice")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("TernaryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AdminApi.Models.App.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 454, DateTimeKind.Local).AddTicks(3832));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("AdminApi.Models.App.ProductSpecification", b =>
                {
                    b.Property<int>("ProductSpecificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 454, DateTimeKind.Local).AddTicks(6133));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductSpecificationId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSpecifications");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantCuisine", b =>
                {
                    b.Property<int>("RestaurantCuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 453, DateTimeKind.Local).AddTicks(4405));

                    b.Property<int>("CusineId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RestaurantCuisineId");

                    b.HasIndex("StoreId");

                    b.ToTable("RestaurantCuisines");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantImage", b =>
                {
                    b.Property<int>("RestaurantImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 452, DateTimeKind.Local).AddTicks(5669));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RestaurantImageId");

                    b.HasIndex("StoreId");

                    b.ToTable("RestaurantImages");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantPriceForTwo", b =>
                {
                    b.Property<int>("RestaurantPriceForTwoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 453, DateTimeKind.Local).AddTicks(2635));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RestaurantPriceForTwoId");

                    b.HasIndex("StoreId");

                    b.ToTable("RestaurantPriceForTwos");
                });

            modelBuilder.Entity("AdminApi.Models.App.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 447, DateTimeKind.Local).AddTicks(5728));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("AdminApi.Models.App.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("BusineessContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 448, DateTimeKind.Local).AddTicks(4964));

                    b.Property<TimeSpan?>("FridayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("FridayOpenTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsFridayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMondayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSaturdayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSundayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThursdayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTuesdayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWednessdayOpen")
                        .HasColumnType("bit");

                    b.Property<string>("Landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Lat")
                        .HasColumnType("float");

                    b.Property<double?>("Long")
                        .HasColumnType("float");

                    b.Property<TimeSpan?>("MondayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("MondayOpenTime")
                        .HasColumnType("time");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefferedBy")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("SaturdayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("SaturdayOpenTime")
                        .HasColumnType("time");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("SundayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("SundayOpenTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ThursdayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ThursdayOpenTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TuesdayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TuesdayOpenTime")
                        .HasColumnType("time");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("WednessdayCloseTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("WednessdayOpenTime")
                        .HasColumnType("time");

                    b.HasKey("StoreId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("AdminApi.Models.App.StoreRatting", b =>
                {
                    b.Property<int>("StoreRattingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AppliedRatting")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 447, DateTimeKind.Local).AddTicks(1770));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StoreRattingId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreRattings");
                });

            modelBuilder.Entity("AdminApi.Models.App.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 453, DateTimeKind.Local).AddTicks(733));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("StoryView")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("AdminApi.Models.App.ViewCount", b =>
                {
                    b.Property<int>("ViewCountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 2, 22, 23, 57, 20, 456, DateTimeKind.Local).AddTicks(695));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ViewCountId");

                    b.ToTable("ViewCounts");
                });

            modelBuilder.Entity("AdminApi.Models.Menu.AppMenu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'11', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int>("IsSubMenu")
                        .HasColumnType("int");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("MenuID");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(3850),
                            IconClass = "fas fa-home",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Dashboard",
                            ParentID = 0,
                            SortOrder = 1,
                            URL = "/DashBoard/Index"
                        },
                        new
                        {
                            MenuID = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4509),
                            IconClass = "fas fa-ellipsis-v",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            MenuTitle = "Menu",
                            ParentID = 0,
                            SortOrder = 2,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4550),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Menu List",
                            ParentID = 2,
                            SortOrder = 0,
                            URL = "/Menu/MenuList"
                        },
                        new
                        {
                            MenuID = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4552),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Menu Group List",
                            ParentID = 2,
                            SortOrder = 0,
                            URL = "/Menu/MenuGroupList"
                        },
                        new
                        {
                            MenuID = 5,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4554),
                            IconClass = "fas fa-user",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            MenuTitle = "User",
                            ParentID = 0,
                            SortOrder = 3,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 6,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4555),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "User List",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/UserList"
                        },
                        new
                        {
                            MenuID = 7,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4557),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Role List",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/RoleList"
                        },
                        new
                        {
                            MenuID = 8,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4558),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Profile",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/UserProfile"
                        },
                        new
                        {
                            MenuID = 9,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4560),
                            IconClass = "fas fa-wrench",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            MenuTitle = "Settings",
                            ParentID = 0,
                            SortOrder = 4,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 10,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 443, DateTimeKind.Local).AddTicks(4561),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            MenuTitle = "Change Password",
                            ParentID = 9,
                            SortOrder = 0,
                            URL = "/User/ChangePassword"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.Menu.MenuGroup", b =>
                {
                    b.Property<int>("MenuGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'5', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MenuGroupID");

                    b.ToTable("MenuGroup");

                    b.HasData(
                        new
                        {
                            MenuGroupID = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 437, DateTimeKind.Local).AddTicks(6279),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Super Admin Group"
                        },
                        new
                        {
                            MenuGroupID = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 438, DateTimeKind.Local).AddTicks(4026),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "User Group"
                        },
                        new
                        {
                            MenuGroupID = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 438, DateTimeKind.Local).AddTicks(4063),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Buyer"
                        },
                        new
                        {
                            MenuGroupID = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 438, DateTimeKind.Local).AddTicks(4065),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Seller"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.Menu.MenuGroupWiseMenuMapping", b =>
                {
                    b.Property<int>("MenuGroupWiseMenuMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'11', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("MenuGroupWiseMenuMappingId");

                    b.ToTable("MenuGroupWiseMenuMapping");

                    b.HasData(
                        new
                        {
                            MenuGroupWiseMenuMappingId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(3701),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 1
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4438),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 3
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4461),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 4
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4463),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 6
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 5,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4465),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 7
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 6,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4466),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 8
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 7,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4467),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 10
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 8,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4468),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 1
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 9,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4470),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 8
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 10,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 444, DateTimeKind.Local).AddTicks(4471),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 10
                        });
                });

            modelBuilder.Entity("AdminApi.Models.User.LogHistory", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("LogHistory");
                });

            modelBuilder.Entity("AdminApi.Models.User.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'5', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<string>("RoleDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 440, DateTimeKind.Local).AddTicks(3339),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserRoleId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 440, DateTimeKind.Local).AddTicks(4102),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            RoleName = "User"
                        },
                        new
                        {
                            UserRoleId = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 440, DateTimeKind.Local).AddTicks(4134),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 3,
                            RoleName = "Buyer"
                        },
                        new
                        {
                            UserRoleId = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 440, DateTimeKind.Local).AddTicks(4136),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 4,
                            RoleName = "Seller"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.User.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChange")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PasswordChangedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 442, DateTimeKind.Local).AddTicks(1452),
                            FullName = "Appman",
                            IsActive = true,
                            IsMigrationData = true,
                            IsPasswordChange = false,
                            Password = "Appman@2019",
                            UserName = "developer",
                            UserRoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2023, 2, 22, 23, 57, 20, 442, DateTimeKind.Local).AddTicks(2287),
                            FullName = "Helen Smith",
                            IsActive = true,
                            IsMigrationData = true,
                            IsPasswordChange = false,
                            Password = "user@2020",
                            UserName = "user@2020",
                            UserRoleId = 2
                        });
                });

            modelBuilder.Entity("AdminApi.Models.App.Category", b =>
                {
                    b.HasOne("AdminApi.Models.App.Category", null)
                        .WithMany("Children")
                        .HasForeignKey("CategoryId1");
                });

            modelBuilder.Entity("AdminApi.Models.App.Follower", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("Followers")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.Product", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.ProductImage", b =>
                {
                    b.HasOne("AdminApi.Models.App.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AdminApi.Models.App.ProductSpecification", b =>
                {
                    b.HasOne("AdminApi.Models.App.Product", "Product")
                        .WithMany("ProductSpecifications")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantCuisine", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("RestaurantCuisines")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantImage", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("RestaurantImages")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.RestaurantPriceForTwo", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("RestaurantPriceForTwos")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.StoreRatting", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("StoreRattings")
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("AdminApi.Models.App.Story", b =>
                {
                    b.HasOne("AdminApi.Models.App.Store", "Store")
                        .WithMany("Stories")
                        .HasForeignKey("StoreId");
                });
#pragma warning restore 612, 618
        }
    }
}
